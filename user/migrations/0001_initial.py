# Generated by Django 4.2.13 on 2024-07-15 10:58

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("deleted", "Deleted"),
                            ("expired", "Expired"),
                            ("confirmed", "Confirmed"),
                            ("messaging", "Messaging"),
                        ],
                        default="messaging",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobPosting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_type", models.CharField(max_length=255, null=True)),
                ("service_period", models.CharField(max_length=255, null=True)),
                ("service_rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("onboarding_location", models.CharField(max_length=255, null=True)),
                ("job_summary", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.IntegerField(choices=[(1, "Type 1"), (2, "Type 2")])),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=255, null=True)),
                ("last_name", models.CharField(max_length=255, null=True)),
                ("email", models.EmailField(max_length=254, null=True, unique=True)),
                ("password", models.CharField(max_length=255, null=True)),
                ("phone", models.CharField(max_length=255, null=True)),
                ("address", models.CharField(max_length=255, null=True)),
                ("rating", models.IntegerField(null=True)),
                ("nid", models.CharField(blank=True, max_length=255, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("datetime", models.DateTimeField(auto_now_add=True)),
                ("payment_method", models.CharField(max_length=255, null=True)),
                (
                    "hired_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hired_transactions",
                        to="user.user",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceProviderRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("send_request", "send_request"),
                            ("rejected", "Rejected"),
                            ("accepted", "Accepted"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("sent_request_time", models.DateTimeField(auto_now_add=True)),
                ("accepted_request_time", models.DateTimeField(blank=True, null=True)),
                ("rejected_request_time", models.DateTimeField(blank=True, null=True)),
                (
                    "job_posting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_provider_requests",
                        to="user.jobposting",
                    ),
                ),
                (
                    "service_provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_provider_requests",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_provider_id", models.CharField(max_length=255, null=True)),
                ("years_in_industry", models.IntegerField()),
                ("intro_video", models.URLField(blank=True, null=True)),
                ("app_verified_date", models.DateField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_providers",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("time", models.DateTimeField(auto_now_add=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="user.chat",
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to="user.user",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Maid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("experience_years", models.IntegerField()),
                ("skills", models.TextField()),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maid",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="jobposting",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="job_postings",
                to="user.user",
            ),
        ),
        migrations.CreateModel(
            name="Hiring",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("customer_rating", models.IntegerField()),
                ("service_provider_rating", models.IntegerField()),
                ("hired_date", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_hirings",
                        to="user.user",
                    ),
                ),
                (
                    "service_provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_provider_hirings",
                        to="user.user",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.transaction",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("license_number", models.CharField(max_length=255, null=True)),
                ("vehicle_type", models.CharField(max_length=255, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="driver",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("occupation", models.CharField(max_length=255, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.CharField(max_length=255, null=True)),
                ("rating", models.FloatField(null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer",
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="chat",
            name="service_provider_request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chats",
                to="user.serviceproviderrequest",
            ),
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("details", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="user.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AcceptedRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "accepted_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "service_provider_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accepted_requests",
                        to="user.serviceproviderrequest",
                    ),
                ),
            ],
        ),
    ]
